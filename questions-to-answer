var = redefine, reasign, function scoped
let = reasign, cant redefine, function scoped, block level scoped
const = cant reasign , cant redefine, function scope, block level scoped

arrow functions: 
    always unonimous
    this keyword no longer bound with arrow functions, like: es5 function has its own this that he bounds,
    it means that anonimous function in object will get the this of the object and not of the function,
    this issue was workarounded with "that" variable before arrow functions

    arguments objec no longer bound wiht arrow functions (console.log(arguments) will not print all argumets as in es5)

plugins to install : babel ES6 ES7

node_modules are different from os to os, so be sure to generate them on machine you work on

npm install -g : is for global, to run the installed as command 

we want react to render our application 

React, ReactDom could be loaded via scrip tag... its just an javascript files..

to compile the JSX to javascript you can run the command (after installing babel and the prisets)
    babel src/app.js --out-file=public/scripts/app.js --presets=env,react (--watch)

.JSX
    answer:
    javascript xml, provided by react 

. JSX is not understud by the browser, it should be translated to normal javascript,
    bable does just this... babel is compailer, it translates JSX, ES7, ES6 to old ES5

. to work with JSX I will install babel localy

ReactDom.render is the function that renders the react components:
it gets the component to render and the root element, there it will be rendered

JSX expressins :
    javascript in JSX, use {javascript} (javascript in curly brackets)

.when class and when function based component?
   answer: class based components are state full, functional are state less components

.what is connect and mapStateToProps?
   answer:

.uper case, lower case, what are the rules?
   answer: if we export single function or some litle code snipet
   when we will use low case for export, 
   if we export class (commponent/model) it will be exported capital case 

.what is so different in middleware?
   answer: middleware, inspects the incoming request, and can change it if its needed,
   after this change the request is sent to the routs...

.default export / named export??
    answer: could be only one /default export
    it could be imported like: import a from "aa"
    named imports could be imported like : import {a} from "aa"
    default export does need to be imported by name(nameing is not important)
    in named, the name is important
    if file has one big main thing to export, it can be a default, and if the file is exporting many litle fucntions they can be the named exports

.describe components of Redux
   answer:

.describe life cycle:
   answer: it exists only at class based components:
   constructor()
   componentWillMount()
   render()
   componentDidMount()
   componentWillUnmound()

.liveserver:
    simple server